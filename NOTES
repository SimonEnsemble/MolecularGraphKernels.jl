GraphMatrix type for dispatching on efficient graph representations
This is basically like what Grakel does... but better UX

Each AbstractProductGraph type T needs to have a corresponding constructor:
    GraphMatrix{T}(::AbstractGraph, AbstractGraph)

Eventually, change the fundamental type from AbstractGraph to GraphMatrix.
The idea is to convert all molecular graphs to their GraphMatrix representations
before calculating product graphs (this should be most efficient for computing
Gram matrices)

#### SUPER CONFUSING! ####
MGK v0.7.0 runs cannabinoid matrix script just fine
v0.8.0 works just fine, also
running the tests on v0.8.0, everything passes
adding grakel_comparison.jl to src causes script-based usage of gram_matrix to fail!


# IDEA
Should be able to avoid using SharedArray by using pmap
Think this will speed up gram_matrix by a lot

### WHAT THE HECK IS GOING ON
Tried the idea above, and found some BIZARRE behavior...


Inputs: 2
MGK (1 proc):  520 ms
MGK (2 procs): 496 ms
MGK (3 procs): 494 ms
Grakel: 210 ms

Inputs: 49
MGK (1 proc):  134 s
MGK (4 procs):  68 s
MGK (10 procs): 48 s
MGK (20 procs): 40 s
MGK (48 procs): 31 s
Grakel: 54 s

Inputs: 98
MGK (48 procs): 81 s
Grakel:        207 s
